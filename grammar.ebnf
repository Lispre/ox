program = function;
function = "int", identifier, "(", ")", "{", { statement }, "}";
statement = "return", expr, ";"
          | "int", identifier, [ "=", expr ], ";"
          | expr, ";" ;
expr = identifier, "=", expr
     | logical_or_expr ;
logical_or_expr = logical_and_expr, { "||", logical_and_expr };
logical_and_expr = equality_expr, { "&&", equality_expr };
equality_expr = relational_expr, { ("!=" | "=="), relational_expr };
relational_expr = bitwise_expr, { ("<" | ">" | "<=" | ">="), bitwise_expr };
bitwise_expr = additive_expr, { ("&" | "|" | "^" | "<<" | ">>"), additive_expr };
additive_expr = term, { ("+" | "-"), term };
term = factor, { ("*" | "/" | "%"), factor };
factor = "(", expr, ")"
       | unary_op, factor
       | int
       | identifier ;
unary_op = "!" | "~" | "-";
